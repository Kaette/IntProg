#BlueJ class context
comment0.target=Road
comment1.params=from\ to\ length
comment1.target=Road(City,\ City,\ int)
comment1.text=\n\ Klassens\ konstrukt\u00F8r\ til\ dens\ feltvariabler\n
comment2.params=
comment2.target=java.lang.String\ toString()
comment2.text=\n\ Et\ @Override\ af\ toString()\ metoden\ ligesom\ i\ City()\n\ @return\ Returnerer\ en\ streng\ der\ forklarer\ hvilke\ byer\ vejen\ g\u00E5r\ imellem,\ p\u00E5\ formen\:\ "from\ ->\ to\ \:\ length\n
comment3.params=other
comment3.target=int\ compareTo(Road)
comment3.text=\n\ Sorterer\ Road\ objekter,\ 1.\ Alfabetisk\ efter\ startby\ 2.\ Alfabetisk\ efter\ slutby\ 3,\ Efter\ l\u00E6ngde\n\ @param\ Road\ Den\ vej\ der\ skal\ sammenlignes\ med\ en\ anden\n\ @param\ Det\ objekt\ der\ skal\ sammenlingnes\ med\n\ @return\ Sortering\ efter\ startsbys\ navn,\ alfabetisk\n\ @return\ Sortering\ efter\ slutbys\ navn,\ alfabetisk\n\ @return\ Sortering\ efter\ l\u00E6ngde,\ h\u00F8jest\ til\ lavest\n
comment4.params=
comment4.target=int\ hashCode()
comment4.text=\n\ Genererer\ hashCode\ med\ primtal\ ligesom\ i\ City()\n\ @return\ De\ f\u00E6rdige\ hash\n
comment5.params=otherObject
comment5.target=boolean\ equals(java.lang.Object)
comment5.text=\n\ Returnerer\ at\ to\ Road\ objekter\ er\ lig\ hinanden\ hvis\ deres\ startby,\ slutby,\ og\ l\u00E6ngde\ er\ ens\n\ @param\ Object\ Det\ objekt\ der\ skal\ sammenlignes\n\ @param\ otherObject\ Det\ objekt\ Object\ sammenlignes\ med\n\ @return\ Et\ bool\ statement.\ Er\ true\ hvis\ startby,\ slutby,\ og\ l\u00E6ngde\ er\ ens.\ Eller\ false\n
comment6.params=
comment6.target=City\ getFrom()
comment6.text=\n\ @return\ Objektes\ startby\n
comment7.params=
comment7.target=City\ getTo()
comment7.text=\n\ @return\ Objektets\ slutby\n
comment8.params=
comment8.target=int\ getLength()
comment8.text=\n\ @return\ Objektets\ l\u00E6ngde\n
numComments=9
